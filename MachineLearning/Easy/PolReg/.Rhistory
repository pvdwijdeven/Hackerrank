source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
PolyTrain.X=matrix(nrow=NN,ncol=4*FF)
PolyTest.X=matrix(nrow=TT,ncol=4*FF)
Train.X=inputset[2:(NN+1),1:FF]
Train.Y=inputset[2:(NN+1),FF+1]
Test.X=inputset[(NN+3):(NN+2+TT),1:FF]
PolyTrain.X=matrix(nrow=NN,ncol=4*FF)
PolyTest.X=matrix(nrow=TT,ncol=4*FF)
FF=inputset[1,1]
NN=inputset[1,2]
TT=inputset[(NN+2),1]
Train.X=inputset[2:(NN+1),1:FF]
View(Test.X)
View(Train.X)
View(PolyTest.X)
View(PolyTrain.X)
for (i in 1:dim(Train.X)[2]){
start=(((i-1)*4)+1)
end=start+2
PolyTrain.X[,start:end]=poly(Train.X[,i],4,raw=TRUE)
PolyTest.X[,start:end]=poly(Test.X[,i],4,raw=TRUE)
}
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
setwd("H:/R/Polynomial Regression")
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
inputset <- read.csv("H:/R/Polynomial Regression/Input.txt",header=FALSE,sep=" ")
Degree=3
FF=inputset[1,1]
NN=inputset[1,2]
TT=inputset[(NN+2),1]
Train.X=inputset[2:(NN+1),1:FF]
Train.Y=inputset[2:(NN+1),FF+1]
Test.X=inputset[(NN+3):(NN+2+TT),1:FF]
PolyTrain.X=matrix(nrow=NN,ncol=Degree*FF)
PolyTest.X=matrix(nrow=TT,ncol=Degree*FF)
for (i in 1:dim(Train.X)[2]){
start=(((i-1)*Degree)+1)
end=start+3
PolyTrain.X[,start:end]=poly(Train.X[,i],Degree,raw=TRUE)
PolyTest.X[,start:end]=poly(Test.X[,i],Degree,raw=TRUE)
}
myfit=lm(Train.Y~.,data=data.frame(PolyTrain.X))
result=predict(myfit,data.frame(PolyTest.X))
cat(sprintf("%f", result),sep="\n")
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
start
end
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
result=predict(myfit,data.frame(PolyTest.X),interval="none")
cat(sprintf("%f", result),sep="\n")
result=predict(myfit,data.frame(PolyTest.X),interval="predict")
cat(sprintf("%f", result),sep="\n")
result=predict(myfit,data.frame(PolyTest.X),interval="none",type="response")
cat(sprintf("%f", result),sep="\n")
result=predict(myfit,data.frame(PolyTest.X),interval="none",type="prediction")
result=predict(myfit,data.frame(PolyTest.X),interval="none",type="terms")
cat(sprintf("%f", result),sep="\n")
plot(Train.X,Train.Y)
plot(Train.X[,1],Train.Y[,1])
plot(Train.X[1,],Train.Y[1,])
plot(Train.X[1,],Train.Y)
plot(Train.X[,1],Train.Y)
plot(Train.X[,2],Train.Y)
result=predict(myfit,data.frame(PolyTest.X),interval="none",type="response",se.fit=TRUE)
cat(sprintf("%f", result),sep="\n")
result
PolyTrain2.X=polym(Train.X,3,raw=False)
PolyTrain2.X=polym(Train.X,3,raw=TRUE)
PolyTrain2.X=polym(Train.X[],3,raw=TRUE)
PolyTrain2.X=polym(Train.X[,1],Train.X[,2],3,raw=TRUE)
PolyTrain2.X=polym(Train.X[1,],Train.X[2,],3,raw=TRUE)
Train.X[1,]
Train.X[,1]
PolyTrain2.X=polym(Train.X[,1],Train.X[,2],3,raw=TRUE)
polym?
?poly
?polym
x=matrix(1:6,ncol=2,nrow=3)
x
poly(x,3)
poly(x,2)
poly(x,1)
poly(x,degree=2)
poly(x,degree=1)
poly(x,degree=1.raw=TRUE)
poly(x,degree=1,raw=TRUE)
poly(x,degree=2,raw=TRUE)
poly(Train.X,degree=2,raw=TRUE)
Train.X=matrix(inputset[2:(NN+1),1:FF])
poly(Train.X,degree=2,raw=TRUE)
View(Train.X)
View(x)
polym(Train.X,degree=2,raw=TRUE)
poly(Train.X,degree=2,raw=TRUE)
Train.X=inputset[2:(NN+1),1:FF]
poly(Train.X,degree=2,raw=TRUE)
x
Train.X
Train.X=matrix(Train.X)
Train.X
Train.X=matrix(Train.X,nrow=100,ncol=FF)
Train.X
typeof(Test.X)
typeof(inputset)
matrix(unlist(inputset), ncol = 10, byrow = TRUE)
Train.X=matrix(unlist(inputset[2:(NN+1),1:FF],ncol=FF,byrow=TRUE)
Train.X=matrix(unlist(inputset[2:(NN+1),1:FF],ncol=FF,byrow=TRUE))
Train.X=matrix(unlist(inputset[2:(NN+1),1:FF],ncol=FF,byrow=TRUE))
Train.X=matrix(unlist(inputset[2:(NN+1),1:FF]),ncol=FF,byrow=TRUE)
Train.X
inputset <- read.csv("H:/R/Polynomial Regression/Input.txt",header=FALSE,sep=" ")
Degree=3
FF=inputset[1,1]
NN=inputset[1,2]
TT=inputset[(NN+2),1]
Train.X=matrix(unlist(inputset[2:(NN+1),1:FF]),ncol=FF,byrow=TRUE)
Train.Y=matrix(unlist(inputset[2:(NN+1),FF+1]), ncol=1,byrow=TRUE)
poly(Train.X,degree=3)
setwd("H:/R/Polynomial Regression")
inputset <- read.csv("H:/R/Polynomial Regression/Input.txt",header=FALSE,sep=" ")
#inputset <- read.csv(file("stdin"),header=FALSE,sep=" ")
FF=inputset[1,1]
NN=inputset[1,2]
TT=inputset[(NN+2),1]
Train.X=matrix(unlist(inputset[2:(NN+1),1:FF]),ncol=FF,byrow=TRUE)
Train.Y=matrix(unlist(inputset[2:(NN+1),FF+1]), ncol=1,byrow=TRUE)
Test.X=matrix(unlist(inputset[(NN+3):(NN+2+TT),1:FF]),ncol=FF,byrow=TRUE)
myfit=lm(Train.Y~.,data=data.frame(poly(Train.X,degree=3)))
result=predict(myfit,data.frame(poly(Test.X,degree=3)),interval="none",type="response",se.fit=TRUE)
myfit=lm(Train.Y~.,data=data.frame(poly(Train.X,degree=3)))
myfit
myfit=lm(Train.Y~.,data=data.frame(poly(Train.X,degree=2)))
result=predict(myfit,data.frame(poly(Test.X,degree=2)),interval="none",type="response",se.fit=TRUE)
cat(sprintf("%f", result),sep="\n")
result
result=predict(myfit,data.frame(poly(Test.X,degree=2)),interval="none",type="response")
result
myfit=lm(Train.Y~.,data=data.frame(poly(Train.X,degree=3)))
result=predict(myfit,data.frame(poly(Test.X,degree=3)),interval="none",type="response")
result=predict(myfit,data.frame(poly(Test.X,degree=2)),interval="none",type="response")
myfit
poly(Test.X,3)
myfit=lm(Train.Y~.,data=data.frame(poly(Train.X,degree=3,raw=TRUE)))
result=predict(myfit,data.frame(poly(Test.X,degree=3,raw=TRUE)),interval="none",type="response")
cat(sprintf("%f", result),sep="\n")
rm(list=lm()
)
rm(list=lm())
rm(list=ls())
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
View(Test.X)
View(Train.X)
View(Train.Y)
poly(Test.X,degree=3,raw=TRUE)
source('H:/R/Polynomial Regression/PolReg.R', echo=TRUE)
